;
;
;

	EXTERN	PRT_DENT
	EXTERN	FETCH_1BYTE
	EXTERN	DISP
	EXTERN	READ_CMT
	GLOBAL	FIREWALL
	GLOBAL	IS_CALLBACK
	GLOBAL	INFO_BUF
	GLOBAL	INFO_SW
	GLOBAL	READ_FP_SCTR
	GLOBAL	FILE_BFFR
	GLOBAL	BFFR_POS
	GLOBAL	BFFR_BLOCK

	CMD	EQU	0FDH
	DATA	EQU	0FCH

	GET_IC_VER	EQU	01H
	RESET_ALL	EQU	06H
	CHECK_EXIST	EQU	06H
	GET_FILE_SIZE	EQU	0CH
	SET_USB_MODE	EQU	15H
	GET_STATUS	EQU	22H
	RD_USB_DATA0	EQU	27H
	SET_FILE_NAME	EQU	2FH
	DISK_CONNECT	EQU	30H
	DISK_MOUNT	EQU	31H
	FILE_OPEN	EQU	32H
	FILE_ERASE	EQU	35H
	FILE_CLOSE	EQU	36H
	DIR_INFO_READ	EQU	37H
	BYTE_LOCATION	EQU	39H
	BYTE_READ	EQU	3AH
	BYTE_RD_GO	EQU	3BH
	DISK_CAPACITY	EQU	3EH
	DISK_QUERY	EQU	3FH

PUT	MACRO	C
	LD	A, C
	RST	18H
	ENDM

START:
; RESET_ALL make corrupt GET_IC_VER ?
;	LD	A,RESET_ALL
;	CALL	WRITECMD
;	LD	C,200
;	CALL	MDELAY

	LD	A, GET_IC_VER
	CALL	WRITECMD
	CALL	READDATA
;	CALL	DISP
;	PUT	' '

	LD	A, CHECK_EXIST
	CALL	WRITECMD
	LD	A, 01H
	CALL	WRITEDATA
	CALL	READDATA
;	CALL	DISP
;	PUT	' '

	LD	A,SET_USB_MODE
	CALL	WRITECMD
;	LD	A, 6
	LD	A, 5
	CALL	WRITEDATA
	CALL	READDATA
;	CALL	DISP
;	PUT	' '

	LD	A, DISK_CONNECT
	CALL	INTRCMD

	LD	A, DISK_MOUNT
	CALL	INTRCMD

	LD	HL, FILENAME
	CALL	SETFNAME
; *****
	LD	A, FILE_OPEN
	CALL	INTRCMD

	LD	HL, ROOTNAME
	CALL	SETFNAME
; *****
	LD	A, FILE_OPEN
	CALL	INTRCMD

	CALL	DIR_WALK

; *****
	LD	A, GET_STATUS
	CALL	WRITECMD
	CALL	READDATA
;	CALL	DISP
;	PUT	' '
	CALL	READUSB

; *****
	LD	A, FILE_CLOSE
	CALL	WRITECMD
	LD	A, 0
	CALL	WRITEDATA
	CALL	WAITINT


	LD	HL, BASFILE
	CALL	SETFNAME

; *****
	LD	A, FILE_OPEN
	CALL	INTRCMD

	LD	A, GET_FILE_SIZE
	CALL	WRITECMD
	LD	A, 68H
	CALL	WRITEDATA
	CALL	READDATA
	LD	(FILE_SIZE), A
	CALL	READDATA
	LD	(FILE_SIZE + 1), A
	CALL	READDATA
	CALL	READDATA

;	CALL	READ_FP_SCTR

;	CALL	FETCH_1BYTE
	CALL	READ_CMT

	LD	A, FILE_CLOSE
	CALL	WRITECMD
	LD	A, 0
	CALL	WRITEDATA
	CALL	WAITINT

; *****
	LD	A, GET_STATUS
	CALL	WRITECMD
	CALL	READDATA
;	CALL	DISP
;	PUT	' '
	CALL	READUSB

	JP	05C66H		; Back to mon

; ******** ********

READ_FP_SCTR:
	LD	A, BYTE_READ
	CALL	WRITECMD
	LD	A, 128
	CALL	WRITEDATA
	LD	A, 0
	CALL	WRITEDATA
	CALL	WAITINT

	LD	A, GET_STATUS
	CALL	WRITECMD
	CALL	READDATA
;	CALL	DISP
;	PUT	'S'

	LD	HL, FILE_BFFR
	CALL	READUSBF
	LD	A,(FILE_BFFR)
;	CALL	DISP
;	PUT	','

	LD	A, BYTE_RD_GO
	CALL	WRITECMD
	CALL	WAITINT
	LD	A, GET_STATUS
	CALL	WRITECMD
	CALL	READDATA
;	CALL	DISP
;	PUT	'S'

	RET

DIR_WALK:
FATLOOP:
	LD	A, BYTE_READ
	CALL	WRITECMD
	LD	A, 32
	CALL	WRITEDATA
	LD	A, 0
	CALL	WRITEDATA
	CALL	WAITINT
	LD	HL, FATENT
	CALL	READUSBF
	LD	A, BYTE_RD_GO
	CALL	WRITECMD
	CALL	WAITINT
	LD	A, GET_STATUS
	CALL	WRITECMD
	CALL	READDATA

	LD	A,(FATENT)
	OR	A, A
	JZ	FATEND
	CP	A, 0E5H
	JZ	FATLOOP
	LD	HL, FATENT
	CALL	PRT_DENT
	JMP	FATLOOP
FATEND:
	RET

FATENT:
	DS	32
FILENAME:
	DB	0
ROOTNAME:
	DB	"/",0
BASFILE:
	DB	"/ALIEN.CMT",0
;	DB	"/TEST.CMT",0
;	DB	"/CLOCK.CMT",0

FIREWALL:
	DS	2

IS_CALLBACK:
	DS	01H 

INFO_BUF:
	DS	10H

INFO_SW:
	DS      01H

FILE_BFFR:
	DS	80H

FILE_SIZE:
	DS	02H

BFFR_POS:
	DB	0

BFFR_BLOCK:
	DB	0

SETFNAME:
	LD	A, SET_FILE_NAME
	CALL	WRITECMD
FSLOOP:
	LD	A, (HL)
	AND	A, A
	JP	Z, FINFS
	CALL	WRITEDATA
	INC	HL
	JP	FSLOOP
FINFS:
	CALL	WRITEDATA
	RET

READUSB:
	LD	A, RD_USB_DATA0
	CALL	WRITECMD
	CALL	READDATA
	LD	C, A
;	CALL	DISP
;	PUT	'['
	LD	A, C
	OR	A, A
	JP	Z, L02
LO1:
	CALL	READDATA
;	CALL	DISP
;	PUT	' '
	DEC	C
	JP	NZ, LO1
L02:
;	PUT	']'
	RET

READUSBF:
	LD	A, RD_USB_DATA0
	CALL	WRITECMD
	CALL	READDATA
	LD	C, A
;	CALL	DISP
;	PUT	'+'
	LD	A, C
	OR	A, A
	JP	Z, L12
L11:
	CALL	READDATA
	LD	(HL), A
	INC	HL
	DEC	C
	JP	NZ, L11
L12:
	RET

INTRCMD:
	CALL	WRITECMD
	CALL	WAITINT
	LD	A, GET_STATUS
	CALL	WRITECMD
	CALL	READDATA
;	CALL	DISP
;	PUT	' '
	CALL	READUSB
	RET

WAITINT:
	CALL	READCMD
	AND	A,80H
	JP	NZ, WAITINT
	RET

WRITECMD:
	OUT	(CMD), A
	RET

WRITEDATA:
	OUT	(DATA), A
	RET

READDATA:
	IN	A, (DATA)
	RET

READCMD:
	IN	A, (CMD)
	RET

MDELAY:
	PUSH	BC
DLOOP:
	LD	B,99H
DL1:	NOP
	DJNZ	DL1
	DEC	C
	JR	NZ,DLOOP
	POP	BC
	RET

